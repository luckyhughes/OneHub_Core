package com.lithium.perf.adapter.ui;

import net.lightbody.bmp.core.har.Har;
import net.lightbody.bmp.proxy.ProxyServer;

import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;

import com.lithium.perf.api.ui.PerfWebDriver;
import com.lithium.perf.core.proxy.DriverDefault;


public class BaseUIPerfTest {

	//public static void main(String[] args) {
		// Create a new instance of the Firefox driver
		// Notice that the remainder of the code relies on the interface,
		// not the implementation.
		DriverDefault dd;
		protected PerfWebDriver driver = null;
		ProxyServer server;
		
		@BeforeClass
		public void BasePerformanceTest()
		{
		
		System.out.println("In BeforeClass");
		DriverDefault.initialize();
		driver = DriverDefault.getDriver();
		server = DriverDefault.getProxy();
		
		}
		
		@BeforeMethod
		public void clear()
		{
		System.out.println("In @BeforeMethod");
		}
		
		
		@AfterMethod
		public void log()
		{
			
		System.out.println("In @AfterMethod");
		
		Har har1 = server.getHar();
		System.out.println("Page source is :" + driver.getPageSource());
		
		System.out.println("size is :" + har1.getLog().getEntries().size());
		
		for (int i=0;i< har1.getLog().getEntries().size(); i++)
		{
		System.out.println("URL is :" + har1.getLog().getEntries().get(i).getRequest().getUrl());
		}
		
		System.out.println("Page title is: " + driver.getTitle());
		
		}
		
		@AfterClass
		public void clean()
		{		
			System.out.println("In AfterClass");
			System.out.println("----------Stopping Proxy -------");
			try {
				server.stop();
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

}
